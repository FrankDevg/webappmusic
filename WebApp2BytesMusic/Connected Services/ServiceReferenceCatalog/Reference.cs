//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp2BytesMusic.ServiceReferenceCatalog {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCatalog.CatalogSoap")]
    public interface CatalogSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Save", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Save(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Save", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveAsync(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Read", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Read();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Read", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ReadAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Update(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateAsync(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckExist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckExist(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckExist", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CheckExistAsync(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Validations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Validations(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Validations", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ValidationsAsync(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetUserType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserType", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetUserTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlaylistType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetPlaylistType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlaylistType", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetPlaylistTypeAsync();
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ECatalog : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string codeCatalogParentField;
        
        private string codeCatalogField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CodeCatalogParent {
            get {
                return this.codeCatalogParentField;
            }
            set {
                this.codeCatalogParentField = value;
                this.RaisePropertyChanged("CodeCatalogParent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CodeCatalog {
            get {
                return this.codeCatalogField;
            }
            set {
                this.codeCatalogField = value;
                this.RaisePropertyChanged("CodeCatalog");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CatalogSoapChannel : WebApp2BytesMusic.ServiceReferenceCatalog.CatalogSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CatalogSoapClient : System.ServiceModel.ClientBase<WebApp2BytesMusic.ServiceReferenceCatalog.CatalogSoap>, WebApp2BytesMusic.ServiceReferenceCatalog.CatalogSoap {
        
        public CatalogSoapClient() {
        }
        
        public CatalogSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CatalogSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatalogSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Save(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog) {
            return base.Channel.Save(catalog);
        }
        
        public System.Threading.Tasks.Task<int> SaveAsync(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog) {
            return base.Channel.SaveAsync(catalog);
        }
        
        public System.Data.DataTable Read() {
            return base.Channel.Read();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ReadAsync() {
            return base.Channel.ReadAsync();
        }
        
        public int Update(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog) {
            return base.Channel.Update(catalog);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAsync(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog) {
            return base.Channel.UpdateAsync(catalog);
        }
        
        public int Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public int CheckExist(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog) {
            return base.Channel.CheckExist(catalog);
        }
        
        public System.Threading.Tasks.Task<int> CheckExistAsync(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog) {
            return base.Channel.CheckExistAsync(catalog);
        }
        
        public string Validations(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog) {
            return base.Channel.Validations(catalog);
        }
        
        public System.Threading.Tasks.Task<string> ValidationsAsync(WebApp2BytesMusic.ServiceReferenceCatalog.ECatalog catalog) {
            return base.Channel.ValidationsAsync(catalog);
        }
        
        public System.Data.DataTable GetUserType() {
            return base.Channel.GetUserType();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetUserTypeAsync() {
            return base.Channel.GetUserTypeAsync();
        }
        
        public System.Data.DataTable GetPlaylistType() {
            return base.Channel.GetPlaylistType();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetPlaylistTypeAsync() {
            return base.Channel.GetPlaylistTypeAsync();
        }
    }
}
