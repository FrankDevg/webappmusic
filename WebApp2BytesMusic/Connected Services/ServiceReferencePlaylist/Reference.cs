//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp2BytesMusic.ServiceReferencePlaylist {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePlaylist.PlaylistSoap")]
    public interface PlaylistSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Save", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Save(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Save", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveAsync(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckExist", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckExist(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckExist", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CheckExistAsync(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReadById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable ReadById(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReadById", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ReadByIdAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Read", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Read(int idUser, int idPlaylist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Read", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ReadAsync(int idUser, int idPlaylist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Update(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateAsync(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Delete(int idPlaylist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Delete", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DeleteAsync(int idPlaylist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FieldsRequiredValidations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string FieldsRequiredValidations(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playlist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FieldsRequiredValidations", ReplyAction="*")]
        System.Threading.Tasks.Task<string> FieldsRequiredValidationsAsync(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playlist);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EPlaylist : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private int idUserField;
        
        private string titleField;
        
        private string creationDateField;
        
        private int typeField;
        
        private string photoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int IdUser {
            get {
                return this.idUserField;
            }
            set {
                this.idUserField = value;
                this.RaisePropertyChanged("IdUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
                this.RaisePropertyChanged("CreationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Photo {
            get {
                return this.photoField;
            }
            set {
                this.photoField = value;
                this.RaisePropertyChanged("Photo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PlaylistSoapChannel : WebApp2BytesMusic.ServiceReferencePlaylist.PlaylistSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlaylistSoapClient : System.ServiceModel.ClientBase<WebApp2BytesMusic.ServiceReferencePlaylist.PlaylistSoap>, WebApp2BytesMusic.ServiceReferencePlaylist.PlaylistSoap {
        
        public PlaylistSoapClient() {
        }
        
        public PlaylistSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlaylistSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlaylistSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlaylistSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Save(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList) {
            return base.Channel.Save(playList);
        }
        
        public System.Threading.Tasks.Task<int> SaveAsync(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList) {
            return base.Channel.SaveAsync(playList);
        }
        
        public int CheckExist(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList) {
            return base.Channel.CheckExist(playList);
        }
        
        public System.Threading.Tasks.Task<int> CheckExistAsync(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList) {
            return base.Channel.CheckExistAsync(playList);
        }
        
        public System.Data.DataTable ReadById(int idUser) {
            return base.Channel.ReadById(idUser);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ReadByIdAsync(int idUser) {
            return base.Channel.ReadByIdAsync(idUser);
        }
        
        public System.Data.DataTable Read(int idUser, int idPlaylist) {
            return base.Channel.Read(idUser, idPlaylist);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ReadAsync(int idUser, int idPlaylist) {
            return base.Channel.ReadAsync(idUser, idPlaylist);
        }
        
        public int Update(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList) {
            return base.Channel.Update(playList);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAsync(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playList) {
            return base.Channel.UpdateAsync(playList);
        }
        
        public int Delete(int idPlaylist) {
            return base.Channel.Delete(idPlaylist);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAsync(int idPlaylist) {
            return base.Channel.DeleteAsync(idPlaylist);
        }
        
        public string FieldsRequiredValidations(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playlist) {
            return base.Channel.FieldsRequiredValidations(playlist);
        }
        
        public System.Threading.Tasks.Task<string> FieldsRequiredValidationsAsync(WebApp2BytesMusic.ServiceReferencePlaylist.EPlaylist playlist) {
            return base.Channel.FieldsRequiredValidationsAsync(playlist);
        }
    }
}
